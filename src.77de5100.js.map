{"version":3,"sources":["Utilities.ts","ShaderProgram.ts","BufferObject.ts","OBJLoader/Face.ts","OBJLoader/Normal.ts","OBJLoader/TextureVertex.ts","OBJLoader/Vertex.ts","OBJLoader/Obj.ts","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat2.js","../node_modules/gl-matrix/esm/mat2d.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec4.js","../node_modules/gl-matrix/esm/quat.js","../node_modules/gl-matrix/esm/quat2.js","../node_modules/gl-matrix/esm/vec2.js","../node_modules/gl-matrix/esm/index.js","MathUtilities.ts","Texture.ts","index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["EPSILON","exports","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","hypot","y","i","arguments","length","sqrt","glMatrix","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","set","create","out","clone","copy","identity","fromValues","m00","m01","m10","m11","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","len","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspectiveNO","fovy","aspect","f","tan","Infinity","perspective","perspectiveZO","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","orthoNO","lr","bt","ortho","orthoZO","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","mag1","mag2","mag","cosine","acos","zero","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","count","fn","arg","l","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","mat3","vec3","vec4","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","view","quat","mat4","dq","w1","fromRotationTranslationValues","outer","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","mat2","mat2d","quat2","vec2","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["export function loadFile(filePath: string) {\r\n    var result = null;\r\n    var xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.open(\"GET\", filePath, false);\r\n    xmlhttp.send();\r\n    if (xmlhttp.status == 200) {\r\n        result = xmlhttp.responseText;\r\n    }\r\n    return result;\r\n}","import { mat4 } from \"gl-matrix\";\r\nimport { gl } from \".\";\r\nimport { loadFile } from \"./Utilities\";\r\n\r\nexport class ShaderProgram {\r\n    public program: WebGLProgram;\r\n\r\n    public constructor(vertexShaderFile: string, fragmentShaderFile: string) {\r\n        const vertexShader = this.createShader(gl.VERTEX_SHADER, loadFile(vertexShaderFile));\r\n        const fragmentShader = this.createShader(gl.FRAGMENT_SHADER, loadFile(fragmentShaderFile));\r\n\r\n        this.program = gl.createProgram();\r\n\r\n        gl.attachShader(this.program, vertexShader);\r\n        gl.attachShader(this.program, fragmentShader);\r\n        gl.linkProgram(this.program);\r\n\r\n        gl.deleteShader(vertexShader);\r\n        gl.deleteShader(fragmentShader);\r\n\r\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\r\n            const log = gl.getProgramInfoLog(this.program);\r\n            this.delete();\r\n            throw new Error(`Failed to link program. Log: ${log}`);\r\n        }\r\n    }\r\n\r\n    private createShader(shaderType: number, shaderSource: string) {\r\n        const shader = gl.createShader(shaderType);\r\n\r\n        gl.shaderSource(shader, shaderSource);\r\n\r\n        gl.compileShader(shader);\r\n\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            const log = gl.getShaderInfoLog(shader);\r\n\r\n            gl.deleteShader(shader);\r\n            throw new Error(`Could not compile shader type: '${shaderType}'. Log: ${log}`);\r\n            return null;\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    public use() {\r\n        gl.useProgram(this.program);\r\n    }\r\n\r\n    public unuse() {\r\n        gl.useProgram(null);\r\n    }\r\n\r\n    public delete() {\r\n        gl.deleteProgram(this.program);\r\n    }\r\n\r\n    public setMatrix4fv(uniformName: string, matrix: mat4) {\r\n        this.use();\r\n        gl.uniformMatrix4fv(gl.getUniformLocation(this.program, uniformName), false, matrix, 0, 0);\r\n        this.unuse();\r\n    }\r\n\r\n    public setInt(uniformName: string, value: number) {\r\n        this.use();\r\n        gl.uniform1i(gl.getUniformLocation(this.program, uniformName), value);\r\n        this.unuse();\r\n    }\r\n\r\n    public setFloat(uniformName: string, value: number) {\r\n        this.use();\r\n        gl.uniform1f(gl.getUniformLocation(this.program, uniformName), value);\r\n        this.unuse();\r\n    }\r\n}","import { gl } from \".\";\r\n\r\nexport class BufferObject {\r\n    public readonly bufferType: number;\r\n\r\n    public get buffer(){\r\n        return this._buffer;\r\n    }\r\n\r\n    private _buffer: WebGLBuffer;\r\n\r\n    public constructor(bufferType: number) {\r\n        this.bufferType = bufferType;\r\n        this.recreate();\r\n    }\r\n\r\n    public setData(data: AllowSharedBufferSource, usage: number) {\r\n        if (!this._buffer) return this;\r\n\r\n        this.bind();\r\n\r\n        gl.bufferData(this.bufferType, data, usage);\r\n\r\n        this.unbind();\r\n\r\n        return this;\r\n    }\r\n\r\n    public bind() {\r\n        if (!this._buffer) return this;\r\n\r\n        gl.bindBuffer(this.bufferType, this._buffer);\r\n\r\n        return this;\r\n    }\r\n\r\n    public unbind() {\r\n        if (!this._buffer) return this;\r\n\r\n        gl.bindBuffer(this.bufferType, null);\r\n\r\n        return this;\r\n    }\r\n\r\n    public recreate() {\r\n        if (this._buffer) return this;\r\n\r\n        this._buffer = gl.createBuffer();\r\n\r\n        return this;\r\n    }\r\n\r\n    public delete() {\r\n        if (!this._buffer) return;\r\n\r\n        gl.deleteBuffer(this._buffer);\r\n        this._buffer = null;\r\n    }\r\n}","import { IType } from \"./IType\";\r\n\r\nconst MinimumDataLength = 4;\r\nconst Prefix = \"f\";\r\n\r\nexport class Face implements IType {\r\n    public UseMtl: string;\r\n    public VertexIndexList: number[];\r\n    public TextureVertexIndexList: number[];\r\n    public NormalVertexIndexList: number[];\r\n\r\n    loadFromStringArray(data: string[]): void {\r\n        if (data.length < MinimumDataLength)\r\n            throw new Error(\"Input array must be of minimum length \" + MinimumDataLength);\r\n\r\n        if (data[0].toLowerCase() !== Prefix)\r\n            throw new Error(\"Data prefix must be '\" + Prefix + \"'\");\r\n\r\n        const vcount = data.length - 1;\r\n        this.VertexIndexList = [];\r\n        this.TextureVertexIndexList = [];\r\n        this.NormalVertexIndexList = [];\r\n\r\n        let success = false;\r\n\r\n        for (let i = 0; i < vcount; i++) {\r\n            const parts = data[i + 1].split('/');\r\n\r\n            let vindex = Number(parts[0]);\r\n            success = !isNaN(vindex);\r\n            if (!success) throw new Error(\"Could not parse parameter as int\");\r\n\r\n            this.VertexIndexList.push(vindex);\r\n\r\n            let temp = 0;\r\n\r\n            if (parts.length >= 2) {\r\n                vindex = Number(parts[1]);\r\n                success = !isNaN(vindex);\r\n                if (success) {\r\n                    temp = vindex;\r\n                }\r\n            }\r\n            this.TextureVertexIndexList.push(temp);\r\n\r\n            temp = 0;\r\n\r\n            if(parts.length >= 3){\r\n                vindex = Number(parts[2]);\r\n                success = !isNaN(vindex);\r\n                if (success) {\r\n                    temp = vindex;\r\n                }\r\n            }\r\n\r\n            this.NormalVertexIndexList.push(temp);\r\n        }\r\n    }\r\n\r\n}","import { IType } from \"./IType\";\r\n\r\nconst MinimumDataLength = 4;\r\nconst Prefix = \"vn\";\r\n\r\nexport class Normal implements IType{\r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n\r\n    public Index: number;\r\n\r\n    loadFromStringArray(data: string[]): void {\r\n        if (data.length < MinimumDataLength)\r\n            throw new Error(\"Input array must be of minimum length \" + MinimumDataLength);\r\n\r\n        if (data[0].toLowerCase() !== Prefix)\r\n            throw new Error(\"Data prefix must be '\" + Prefix + \"'\");\r\n\r\n        let success = false;\r\n\r\n        let x = 0;\r\n        let y = 0;\r\n        let z = 0;\r\n\r\n        x = Number(data[1]);\r\n        success = !isNaN(x)\r\n        if (!success)\r\n            throw new Error(\"Could not parse X parameter as double\");\r\n\r\n        y = Number(data[2]);\r\n        success = !isNaN(y)\r\n        if (!success)\r\n            throw new Error(\"Could not parse Y parameter as double\");\r\n        \r\n        z = Number(data[3]);\r\n        success = !isNaN(z)\r\n        if (!success)\r\n            throw new Error(\"Could not parse Z parameter as double\");\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n}","import { IType } from \"./IType\";\r\n\r\nconst MinimumDataLength = 3;\r\nconst Prefix = \"vt\";\r\n\r\nexport class TextureVertex implements IType {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public Index: number;\r\n\r\n    loadFromStringArray(data: string[]): void {\r\n        if (data.length < MinimumDataLength)\r\n            throw new Error(\"Input array must be of minimum length \" + MinimumDataLength);\r\n\r\n        if (data[0].toLowerCase() !== Prefix)\r\n            throw new Error(\"Data prefix must be '\" + Prefix + \"'\");\r\n\r\n        let success = false;\r\n\r\n        let x = 0;\r\n        let y = 0;\r\n\r\n        x = Number(data[1]);\r\n        success = !isNaN(x)\r\n        if (!success)\r\n            throw new Error(\"Could not parse X parameter as double\");\r\n\r\n        y = Number(data[2]);\r\n        success = !isNaN(y)\r\n        if (!success)\r\n            throw new Error(\"Could not parse Y parameter as double\");\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n}","import { IType } from \"./IType\";\r\n\r\nconst MinimumDataLength = 4;\r\nconst Prefix = \"v\";\r\n\r\nexport class Vertex implements IType {\r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n\r\n    public Index: number;\r\n\r\n    loadFromStringArray(data: string[]): void {\r\n        if (data.length < MinimumDataLength)\r\n            throw new Error(\"Input array must be of minimum length \" + MinimumDataLength);\r\n\r\n        if (data[0].toLowerCase() !== Prefix)\r\n            throw new Error(\"Data prefix must be '\" + Prefix + \"'\");\r\n\r\n        let success = false;\r\n\r\n        let x = 0;\r\n        let y = 0;\r\n        let z = 0;\r\n\r\n        x = Number(data[1]);\r\n        success = !isNaN(x)\r\n        if (!success)\r\n            throw new Error(\"Could not parse X parameter as double\");\r\n\r\n        y = Number(data[2]);\r\n        success = !isNaN(y)\r\n        if (!success)\r\n            throw new Error(\"Could not parse Y parameter as double\");\r\n        \r\n        z = Number(data[3]);\r\n        success = !isNaN(z)\r\n        if (!success)\r\n            throw new Error(\"Could not parse Z parameter as double\");\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n}","import { loadFile } from \"../Utilities\";\r\nimport { Extent } from \"./Extent\";\r\nimport { Face } from \"./Face\";\r\nimport { Normal } from \"./Normal\";\r\nimport { TextureVertex } from \"./TextureVertex\";\r\nimport { Vertex } from \"./Vertex\";\r\n\r\nclass FaceData {\r\n    public vertexA: Vertex;\r\n    public vertexB: Vertex;\r\n    public vertexC: Vertex;\r\n    public normalA: Normal;\r\n    public normalB: Normal;\r\n    public normalC: Normal;\r\n    public textureA: TextureVertex;\r\n    public textureB: TextureVertex;\r\n    public textureC: TextureVertex;\r\n}\r\n\r\nexport class Obj {\r\n    public vertexList: Vertex[];\r\n    public faceList: Face[];\r\n    public textureList: TextureVertex[];\r\n    public normalList: Normal[];\r\n\r\n    public vertices: number[];\r\n    public uvs: number[];\r\n    public normals: number[];\r\n    public indices: number[];\r\n\r\n    public size: Extent;\r\n\r\n    public useMtl: string;\r\n    public mtl: string;\r\n\r\n    public constructor() {\r\n        this.vertexList = [];\r\n        this.faceList = [];\r\n        this.textureList = [];\r\n        this.normalList = [];\r\n    }\r\n\r\n    public loadObjFile(path: string) {\r\n        const file = loadFile(path);\r\n        this.loadObj(file.split(\"\\n\"));\r\n    }\r\n\r\n    public loadObj(data: string[]) {\r\n        data.forEach(line => {\r\n            this.processLine(line);\r\n        });\r\n\r\n        {\r\n\r\n            const indices = this.facesToVertexIndices();\r\n            const newArray: Vertex[] = [];\r\n\r\n            indices.forEach(i => {\r\n                newArray.push(this.vertexList[i]);\r\n            });\r\n\r\n            this.vertexList = newArray;\r\n        }\r\n\r\n        {\r\n\r\n            const indices = this.facesToNormalIndices();\r\n            const newArray: Normal[] = [];\r\n\r\n            indices.forEach(i => {\r\n                newArray.push(this.normalList[i]);\r\n            });\r\n\r\n            this.normalList = newArray;\r\n        }\r\n\r\n        {\r\n\r\n            const indices = this.facesToTextureIndices();\r\n            const newArray: TextureVertex[] = [];\r\n\r\n            indices.forEach(i => {\r\n                newArray.push(this.textureList[i]);\r\n            });\r\n\r\n            this.textureList = newArray;\r\n        }\r\n\r\n        this.indices = [];\r\n        this.vertices = [];\r\n        this.normals = [];\r\n        this.uvs = [];\r\n\r\n        interface Vec2 {\r\n            x: number;\r\n            y: number;\r\n        }\r\n\r\n        interface Vec3 {\r\n            x: number;\r\n            y: number;\r\n            z: number;\r\n        }\r\n\r\n        const temp: { v: Vec3, u: Vec2, n: Vec3 }[] = []\r\n\r\n        for (let i = 0; i < this.vertexList.length; i++) {\r\n            const vertice = { x: this.vertexList[i].x, y: this.vertexList[i].y, z: this.vertexList[i].z };\r\n            const uv = { x: this.textureList[i].x, y: this.textureList[i].y };\r\n            const normal = { x: this.normalList[i].x, y: this.normalList[i].y, z: this.normalList[i].z };\r\n\r\n            const data = { v: vertice, u: uv, n: normal };\r\n\r\n            const index = temp.findIndex(d => d === data);\r\n            if (index < 0) {\r\n                this.indices.push(temp.length);\r\n                temp.push(data);\r\n                this.vertices.push(vertice.x, vertice.y, vertice.z);\r\n                this.normals.push(normal.x, normal.y, normal.z);\r\n                this.uvs.push(uv.x, uv.y);\r\n            } else {\r\n                this.indices.push(index);\r\n            }\r\n        }\r\n\r\n        /*faces.forEach(face=>{\r\n            this.vertexList.push(face.vertexA);\r\n            this.vertexList.push(face.vertexB);\r\n            this.vertexList.push(face.vertexC);\r\n        });*/\r\n    }\r\n\r\n    private processLine(line: string) {\r\n        const parts = line.split(' ').filter(c => c !== '');\r\n\r\n        if (parts.length > 0) {\r\n            switch (parts[0]) {\r\n                case \"usemtl\":\r\n                    this.useMtl = parts[1];\r\n                    break;\r\n                case \"mtllib\":\r\n                    this.mtl = parts[1];\r\n                    break;\r\n                case \"v\":\r\n                    const v = new Vertex();\r\n                    v.loadFromStringArray(parts);\r\n                    this.vertexList.push(v);\r\n                    v.Index = this.vertexList.length;\r\n                    break;\r\n                case \"vn\":\r\n                    const n = new Normal();\r\n                    n.loadFromStringArray(parts);\r\n                    this.normalList.push(n);\r\n                    n.Index = this.normalList.length;\r\n                    break;\r\n                case \"f\":\r\n                    const f = new Face();\r\n                    f.loadFromStringArray(parts);\r\n                    f.UseMtl = this.useMtl;\r\n                    this.faceList.push(f);\r\n                    break;\r\n                case \"vt\":\r\n                    const vt = new TextureVertex();\r\n                    vt.loadFromStringArray(parts);\r\n                    this.textureList.push(vt);\r\n                    vt.Index = this.textureList.length;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public facesToVertexIndices() {\r\n        const indices: number[] = [];\r\n\r\n        for (let i = 0; i < this.faceList.length; i++) {\r\n            const face = this.faceList[i];\r\n\r\n            if (face.VertexIndexList.length == 4) {\r\n\r\n                indices.push(face.VertexIndexList[0] - 1);\r\n                indices.push(face.VertexIndexList[1] - 1);\r\n                indices.push(face.VertexIndexList[2] - 1);\r\n\r\n                indices.push(face.VertexIndexList[0] - 1);\r\n                indices.push(face.VertexIndexList[2] - 1);\r\n                indices.push(face.VertexIndexList[3] - 1);\r\n            } else {\r\n                face.VertexIndexList.forEach(v => {\r\n                    indices.push(v - 1);\r\n                });\r\n            }\r\n        }\r\n\r\n        return indices;\r\n    }\r\n\r\n    public facesToNormalIndices() {\r\n        const indices: number[] = [];\r\n\r\n        for (let i = 0; i < this.faceList.length; i++) {\r\n            const face = this.faceList[i];\r\n\r\n            if (face.NormalVertexIndexList.length == 4) {\r\n\r\n                indices.push(face.NormalVertexIndexList[0] - 1);\r\n                indices.push(face.NormalVertexIndexList[1] - 1);\r\n                indices.push(face.NormalVertexIndexList[2] - 1);\r\n\r\n                indices.push(face.NormalVertexIndexList[0] - 1);\r\n                indices.push(face.NormalVertexIndexList[2] - 1);\r\n                indices.push(face.NormalVertexIndexList[3] - 1);\r\n            } else {\r\n                face.NormalVertexIndexList.forEach(v => {\r\n                    indices.push(v - 1);\r\n                });\r\n            }\r\n        }\r\n\r\n        return indices;\r\n    }\r\n\r\n    public facesToTextureIndices() {\r\n        const indices: number[] = [];\r\n\r\n        for (let i = 0; i < this.faceList.length; i++) {\r\n            const face = this.faceList[i];\r\n\r\n            if (face.TextureVertexIndexList.length == 4) {\r\n\r\n                indices.push(face.TextureVertexIndexList[0] - 1);\r\n                indices.push(face.TextureVertexIndexList[1] - 1);\r\n                indices.push(face.TextureVertexIndexList[2] - 1);\r\n\r\n                indices.push(face.TextureVertexIndexList[0] - 1);\r\n                indices.push(face.TextureVertexIndexList[2] - 1);\r\n                indices.push(face.TextureVertexIndexList[3] - 1);\r\n            } else {\r\n                face.TextureVertexIndexList.forEach(v => {\r\n                    indices.push(v - 1);\r\n                });\r\n            }\r\n        }\r\n\r\n        return indices;\r\n    }\r\n\r\n    public vertexListToVertices() {\r\n        const vertices: number[] = [];\r\n\r\n        this.vertexList.forEach(v => vertices.push(v.x, v.y, v.z));\r\n\r\n        return vertices;\r\n    }\r\n\r\n    public vertexTexturesListToUvs() {\r\n        const vertices: number[] = [];\r\n\r\n        this.textureList.forEach(v => vertices.push(v.x, v.y));\r\n\r\n        return vertices;\r\n    }\r\n\r\n    public vertexNormalsToNormals() {\r\n        const vertices: number[] = [];\r\n\r\n        this.normalList.forEach(v => vertices.push(v.x, v.y, v.z));\r\n\r\n        return vertices;\r\n    }\r\n}","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nexport var getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nexport var setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nexport var length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","export function isPowerOf2(value:number) {\r\n    return (value & (value - 1)) == 0;\r\n}","import { gl } from \".\";\r\nimport { isPowerOf2 } from \"./MathUtilities\";\r\n\r\nexport class Texture {\r\n    public readonly texture: WebGLTexture;\r\n\r\n    public constructor(imageUrl: string, flipTexture = true) {\r\n        this.texture = gl.createTexture();\r\n        this.bind();\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\r\n        const image = new Image();\r\n        image.onload = () => {\r\n            this.bind();\r\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipTexture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n\r\n            if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n            } else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            }\r\n            this.unbind();\r\n        };\r\n        image.src = imageUrl;\r\n    }\r\n\r\n    public bind() {\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    }\r\n\r\n    public unbind() {\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n\r\n    public activate(textureIndex = 0) {\r\n        gl.activeTexture(gl.TEXTURE0 + textureIndex);\r\n        this.bind();\r\n    }\r\n\r\n    public delete() {\r\n        gl.deleteTexture(this.texture);\r\n    }\r\n}","import { ShaderProgram } from \"./ShaderProgram\";\r\nimport { BufferObject } from \"./BufferObject\";\r\nimport { Obj } from \"./OBJLoader/Obj\";\r\nimport { mat4 } from \"gl-matrix\";\r\nimport { Texture } from \"./Texture\";\r\n\r\nexport let gl: WebGL2RenderingContext;\r\n\r\n(() => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1200;\r\n    canvas.height = 600;\r\n    gl = canvas.getContext(\"webgl2\");\r\n\r\n    document.body.appendChild(canvas);\r\n\r\n    const program = new ShaderProgram(\"resources/shaders/simple.vs\", \"resources/shaders/simple.fs\");\r\n\r\n    const fishObj = new Obj();\r\n    fishObj.loadObjFile(\"resources/fish.obj\");\r\n\r\n    const vertexData = fishObj.vertices;\r\n\r\n    const uvs = fishObj.uvs;\r\n    \r\n    const indices = fishObj.indices;\r\n\r\n    const normals = fishObj.normals;\r\n\r\n    const texture = new Texture(\"resources/images/fish_texture.png\");\r\n\r\n    const vertexBuffer = new BufferObject(gl.ARRAY_BUFFER).setData(new Float32Array(vertexData), gl.STATIC_DRAW);\r\n    const uvsBuffer = new BufferObject(gl.ARRAY_BUFFER).setData(new Float32Array(uvs), gl.STATIC_DRAW);\r\n    const indicesBuffer = new BufferObject(gl.ELEMENT_ARRAY_BUFFER).setData(new Int32Array(indices), gl.STATIC_DRAW);\r\n    const normalsBuffer = new BufferObject(gl.ARRAY_BUFFER).setData(new Float32Array(normals), gl.STATIC_DRAW);\r\n\r\n    const delta = 60 / 1000;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, [0, 0, -4]);\r\n\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, 60 * (Math.PI / 180), canvas.clientWidth / canvas.clientHeight, 0.1, 100);\r\n\r\n    program.setMatrix4fv(\"projectionMatrix\", projectionMatrix);\r\n    program.setMatrix4fv(\"modelMatrix\", modelMatrix);\r\n\r\n    const startTime = Date.now();\r\n\r\n    setInterval(() => {\r\n\r\n        mat4.rotate(modelMatrix, modelMatrix, (Math.PI / 32) * delta, [0, 1, 0]);\r\n        program.setMatrix4fv(\"modelMatrix\", modelMatrix);\r\n\r\n        program.setFloat(\"time\", (Date.now() - startTime)/1000);\r\n\r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.COLOR_BUFFER_BIT);\r\n\r\n        program.use();\r\n\r\n        vertexBuffer.bind();\r\n        gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0);\r\n        gl.enableVertexAttribArray(0);\r\n\r\n        uvsBuffer.bind();\r\n        gl.vertexAttribPointer(1, 2, gl.FLOAT, false, 0, 0);\r\n        gl.enableVertexAttribArray(1);\r\n\r\n        normalsBuffer.bind();\r\n        gl.vertexAttribPointer(2, 3, gl.FLOAT, false, 0, 0);\r\n        gl.enableVertexAttribArray(2);\r\n\r\n        texture.activate();\r\n\r\n        indicesBuffer.bind();\r\n\r\n        gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_INT, 0);\r\n\r\n\r\n\r\n    }, 1000 / 60);\r\n\r\n    addEventListener(\"close\", () => {\r\n        program.delete();\r\n        vertexBuffer.delete();\r\n        indicesBuffer.delete();\r\n        uvsBuffer.delete();\r\n        normalsBuffer.delete();\r\n        texture.delete();\r\n    });\r\n})();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}